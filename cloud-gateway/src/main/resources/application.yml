server:
  port: 9090

spring:
  application:
    name: api-gateway
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}
  cloud:
    gateway:
      routes:
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackuri: forward:/orderServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: product-service
                fallbackuri: forward:/productServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payments/**
          filters:
            - name: CircuitBreaker
              args:
                name: payment-service
                fallbackuri: forward:/paymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
okta:
  oauth2:
    audience: api://default
    issuer: https://dev-09702410.okta.com/oauth2/default
    client-id: 0oac8xrjuyi9gFif95d7
    client-secret: K_Z_9GnUUuvaV9gS-XC6GkiirtW_TNWljEekv4yfhjaemIrMDa1nAYemug5vv6cr
    scopes: openid, email, profile, offline_access